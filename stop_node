#!/bin/bash

rc_file_path=$1                                 #Get OpenStack rc file path as cmd line input
search_line_number=$(grep -n "unicore-master" terraform/terraform.tfstate | cut -f1 -d:)								#Get line number, after master information starts
IP_MASTER_NODE=$(tail -n +$search_line_number terraform/terraform.tfstate | grep "network.0.fixed_ip_v4" | awk -F ': "' '{print $2}' | head -c -3)	#Get public IP of master node
SSH_PATH_LOCAL="/home/centos/.ssh/connection_key.pem"													#Get path to internal SSH key in master node
SSH_PATH_MASTER=$(awk '/private_key_path/{getline; print}' terraform/vars.tf | awk -F ' = "' '{print $2}' | head -c -2)					#Get path to SSH key to master node
HIGHEST_USED_NODE_NAME=$(ssh -n -o StrictHostKeyChecking=no -i $SSH_PATH_MASTER centos@$IP_MASTER_NODE tail -n 1 /etc/hosts | awk -F' ' '{print $2}')	#Get node name to remove
HIGHEST_USED_NODE_NUMBER=$(echo $HIGHEST_USED_NODE_NAME | awk -F"-" '{print $4}')									#Get node digit from node name to remove

ssh -n -o StrictHostKeyChecking=no -i $SSH_PATH_MASTER centos@$IP_MASTER_NODE "remove_node_from_cluster $HIGHEST_USED_NODE_NAME $SSH_PATH_LOCAL"	#Start node removal over script on master node
cd terraform 																		#Change to add node directory
source $rc_file_path                            													#Set path to rc file to source OpenStack API credentials

terraform init                                  													#Init terrafrom
terraform destroy -auto-approve -target=openstack_compute_instance_v2.compute[$HIGHEST_USED_NODE_NUMBER]						#Delete VM including volume after removal
cd ..																			#Change to repository root directory
rm -f terraform/terraform.tfstate.*															#Clean up created terraform backups
